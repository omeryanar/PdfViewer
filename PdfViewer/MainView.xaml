<dxr:DXRibbonWindow x:Class="PdfViewer.MainView"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
                    xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"
                    xmlns:dxpdf="http://schemas.devexpress.com/winfx/2008/xaml/pdf"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:themes="http://schemas.devexpress.com/winfx/2008/xaml/pdf/themekeys"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:PdfViewer"
                    Title="PDF Viewer" WindowState="Maximized"
                    DataContext="{dxmvvm:ViewModelSource Type=local:MainViewModel}">

    <dxr:DXRibbonWindow.Resources>
        <local:StringEqualityConverter x:Key="StringEqualityConverter" />
        <local:LanguageImageConverter x:Key="LanguageImageConverter" />

        <Style TargetType="dxdo:LayoutPanel">
            <Setter Property="ShowExpandButton" Value="False" />
            <Setter Property="ShowCloseButton" Value="False" />
            <Setter Property="AllowFloat" Value="False" />
            <Setter Property="AllowMove" Value="False" />
            <Setter Property="ItemWidth" Value="300" />
        </Style>

        <Style x:Key="FlatButtonStyle" TargetType="Button">
            <Setter Property="Padding" Value="0" />
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Label Padding="0" FontFamily="/Assets/#FontAwesome"
                               Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                               FontSize="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}"
                               Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" 
                               IsEnabled="{TemplateBinding IsEnabled}" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="#0072C6" />
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                            <Trigger Property ="IsPressed" Value ="True">
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property ="IsEnabled" Value ="False">
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate TargetType="{x:Type Button}" x:Key="{themes:PdfViewerThemeKey IsThemeIndependent=True, ResourceKey=StartScreenDocumentLinkTemplate}">
            <StackPanel Orientation="Horizontal">
                <Image Width="32" Height="32" Source="{dx:SvgImageSource Uri=Assets/PdfDocument.svg}" Margin="5,0" />
                <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" TextBlock.FontSize="16" TextBlock.Foreground="Black" />
            </StackPanel>
        </ControlTemplate>

        <DataTemplate x:Key="ListBoxEditItemTemplate">
            <StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock TextWrapping="Wrap" Margin="10,10,5,0">
                        <Run Text="{Binding Word}" FontWeight="Bold" FontSize="14" Foreground="#0072C6" />
                        <Run Text="{Binding WordClass, StringFormat='({0})'}" FontStyle="Italic" />
                    </TextBlock>
                    <Button Content="&#xf028;" FontSize="16" VerticalAlignment="Bottom" Style="{StaticResource FlatButtonStyle}" CommandParameter="{Binding Word}"
                            Command="{Binding DataContext.PronounceCommand, RelativeSource={RelativeSource AncestorType=dxr:DXRibbonWindow}}" />
                </StackPanel>
                <TextBlock TextWrapping="Wrap" Margin="15,5,5,0" Text="{Binding Definition}"
                           Visibility="{Binding DataContext.ShowDefinitions, RelativeSource={RelativeSource AncestorType=dxr:DXRibbonWindow}, Converter={dxmvvm:BooleanToVisibilityConverter}}"/>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="PopupMenuItemTemplate">
            <ContentControl>
                <dxb:BarCheckItem GlyphSize="Custom" Content="{Binding NativeName}"
                                  IsChecked="{DXBinding '@a($dxb:BarSplitButtonItem).Tag==@c.Name', Mode=OneWay}"
                                  Glyph="{Binding Name, Converter={StaticResource LanguageImageConverter}, ConverterParameter=24}" CommandParameter="{Binding}"
                                  Command="{Binding DataContext.ChangeInputCultureCommand, RelativeSource={RelativeSource AncestorType={x:Type dxr:DXRibbonWindow}}}" />
            </ContentControl>
        </DataTemplate>

    </dxr:DXRibbonWindow.Resources>

    <dxmvvm:Interaction.Behaviors>
        <dx:DXMessageBoxService />
        <dxmvvm:SaveFileDialogService />
        <dxmvvm:EventToCommand EventName="Closing" Command="{Binding SaveDocumentCommand}" CommandParameter="{Binding Document, ElementName=PdfViewer}" />
    </dxmvvm:Interaction.Behaviors>

    <dxb:BarManager>
        <dxb:BarManager.Items>
            <dxb:BarSplitButtonItem x:Name="InputLanguageItem" Content="Input Language" ActAsDropDown="True" Tag="{Binding InputCulture.Name}"
                                    Glyph="{Binding InputCulture.Name, Converter={StaticResource LanguageImageConverter}, ConverterParameter=16}"
                                    LargeGlyph="{Binding InputCulture.Name, Converter={StaticResource LanguageImageConverter}, ConverterParameter=32}">
                <dxb:PopupMenu ItemLinksSource="{Binding SupportedLanguages}">
                    <dxb:PopupMenu.ItemTemplate>
                        <DataTemplate>
                            <ContentControl>
                                <dxb:BarButtonItem GlyphSize="Custom" Content="{Binding NativeName}"
                                                   IsEnabled="{DXBinding '@a($dxb:BarSplitButtonItem).Tag!=@c.Name', Mode=OneWay}"
                                                   Glyph="{Binding Name, Converter={StaticResource LanguageImageConverter}, ConverterParameter=24}" CommandParameter="{Binding}"
                                                   Command="{Binding DataContext.ChangeInputCultureCommand, RelativeSource={RelativeSource AncestorType={x:Type dxr:DXRibbonWindow}}}" />
                            </ContentControl>
                        </DataTemplate>
                    </dxb:PopupMenu.ItemTemplate>
                </dxb:PopupMenu>
            </dxb:BarSplitButtonItem>
            <dxb:BarButtonItem x:Name="SwapLanguagesItem" Command="{Binding SwapLanguagesCommand}" Content="Swap"
                               Glyph="{dx:SvgImageSource Uri=Assets/Toolbar/Swap.svg}" LargeGlyph="{dx:SvgImageSource Uri=Assets/Toolbar/Swap.svg}" />
            <dxb:BarSplitButtonItem x:Name="OutputLanguageItem" Content="Output Language" ActAsDropDown="True" Tag="{Binding OutputCulture.Name}"
                                    Glyph="{Binding OutputCulture.Name, Converter={StaticResource LanguageImageConverter}, ConverterParameter=16}"
                                    LargeGlyph="{Binding OutputCulture.Name, Converter={StaticResource LanguageImageConverter}, ConverterParameter=32}">
                <dxb:PopupMenu ItemLinksSource="{Binding SupportedLanguages}">
                    <dxb:PopupMenu.ItemTemplate>
                        <DataTemplate>
                            <ContentControl>
                                <dxb:BarButtonItem GlyphSize="Custom" Content="{Binding NativeName}"
                                                   IsEnabled="{DXBinding '@a($dxb:BarSplitButtonItem).Tag!=@c.Name', Mode=OneWay}"
                                                   Glyph="{Binding Name, Converter={StaticResource LanguageImageConverter}, ConverterParameter=24}" CommandParameter="{Binding}"
                                                   Command="{Binding DataContext.ChangeOutputCultureCommand, RelativeSource={RelativeSource AncestorType={x:Type dxr:DXRibbonWindow}}}" />
                            </ContentControl>
                        </DataTemplate>
                    </dxb:PopupMenu.ItemTemplate>
                </dxb:PopupMenu>
            </dxb:BarSplitButtonItem>
        </dxb:BarManager.Items>
        <DockPanel>
            <dxr:RibbonControl DockPanel.Dock="Top" AllowCustomization="False" ToolbarShowCustomizationButton="False" RibbonHeaderVisibility="Collapsed" RibbonStyle="Office2019" />
            <dxdo:DockLayoutManager AutoHideExpandMode="MouseDown" AutoHideMode="Inline" Margin="5,8,5,5">
                <dxmvvm:Interaction.Behaviors>
                    <local:UniformItemWidthBehavior ItemWidth="300" />
                </dxmvvm:Interaction.Behaviors>
                <dxdo:LayoutGroup>
                    <dxdo:DocumentGroup ShowTabForSinglePage="False">
                        <dxdo:DocumentPanel ShowCaption="False">
                            <dxpdf:PdfViewerControl x:Name="PdfViewer" DocumentSource="{Binding CurrentDocumentPath, Mode=TwoWay}" DetachStreamOnLoadComplete="True"
                                                    ShowStartScreen="True" ShowOpenFileOnStartScreen="False" ZoomMode="PageLevel" ScrollViewer.PanningMode="Both"
                                                    RecentFiles="{Binding RecentFiles}" NumberOfRecentFiles="10" CurrentPageNumber="{Binding CurrentPageNumber, Mode=TwoWay}">
                                <dxmvvm:Interaction.Behaviors>                                    
                                    <dxmvvm:EventToCommand EventName="SelectionEnded" Command="{Binding HighlightTextCommand, ElementName=PdfViewer}" />
                                    <dxmvvm:EventToCommand EventName="AnnotationCreating" Command="{Binding CreateMarkupCommand}" PassEventArgsToCommand="True" />
                                    <dxmvvm:EventToCommand EventName="AnnotationDeleting" Command="{Binding DeleteMarkupCommand}" PassEventArgsToCommand="True" />
                                    <dxmvvm:EventToCommand EventName="AnnotationGotFocus" Command="{Binding SelectDictionaryEntryCommand}" PassEventArgsToCommand="True" />
                                    <dxmvvm:EventToCommand EventName="DocumentLoaded" Command="{Binding LoadDocumentCommand}" CommandParameter="{Binding Document, ElementName=PdfViewer}" />
                                    <dxmvvm:EventToCommand EventName="DocumentClosing" Command="{Binding SaveDocumentCommand}" CommandParameter="{Binding Document, ElementName=PdfViewer}" />
                                    <dxmvvm:EventToCommand EventName="DocumentClosing" Command="{Binding CloseDocumentCommand}" PassEventArgsToCommand="True" />
                                </dxmvvm:Interaction.Behaviors>
                                <dxpdf:PdfViewerControl.CommentViewerSettings>
                                    <dxpdf:PdfCommentViewerSettings HideCommentViewer="True" />
                                </dxpdf:PdfViewerControl.CommentViewerSettings>
                                <dxpdf:PdfViewerControl.OutlinesViewerSettings>
                                    <dxpdf:PdfOutlinesViewerSettings HideOutlinesViewer="True" />
                                </dxpdf:PdfViewerControl.OutlinesViewerSettings>
                                <dxpdf:PdfViewerControl.ThumbnailsViewerSettings>
                                    <dxpdf:PdfThumbnailsViewerSettings HideThumbnailsViewer="True" />
                                </dxpdf:PdfViewerControl.ThumbnailsViewerSettings>
                                <dxpdf:PdfViewerControl.AttachmentsViewerSettings>
                                    <dxpdf:PdfAttachmentsViewerSettings HideAttachmentsViewer="True" />
                                </dxpdf:PdfViewerControl.AttachmentsViewerSettings>                                
                                <dxpdf:PdfViewerControl.CommandProvider>
                                    <dxpdf:PdfCommandProvider>
                                        <dxpdf:PdfCommandProvider.RibbonActions>
                                            <dxb:RemoveAction ElementName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentRibbonPage}" />
                                            <dxb:RemoveAction ElementName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.FormDataRibbonPage}" />
                                            <dxb:ReplaceAction ElementName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.OpenFromWeb}">
                                                <dxb:BarButtonItem Content="Open" Command="{Binding OpenDocumentCommand, ElementName=PdfViewer}"
                                                                   Glyph="{dx:SvgImageSource Uri=Assets/Toolbar/Open.svg}" LargeGlyph="{dx:SvgImageSource Uri=Assets/Toolbar/Open.svg}"/>
                                            </dxb:ReplaceAction>
                                            <dxb:UpdateAction ElementName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.SaveAs}" PropertyName="Glyph" 
                                                              Value="{dx:SvgImageSource Uri=Assets/Toolbar/SaveAs.svg}" />
                                            <dxb:UpdateAction ElementName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.SaveAs}" PropertyName="LargeGlyph" 
                                                              Value="{dx:SvgImageSource Uri=Assets/Toolbar/SaveAs.svg}" />
                                            <dxb:UpdateAction ElementName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.Print}" PropertyName="Glyph" 
                                                              Value="{dx:SvgImageSource Uri=Assets/Toolbar/Print.svg}" />
                                            <dxb:UpdateAction ElementName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.Print}" PropertyName="LargeGlyph" 
                                                              Value="{dx:SvgImageSource Uri=Assets/Toolbar/Print.svg}" />
                                            <dxb:UpdateAction ElementName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.Find}" PropertyName="Glyph" 
                                                              Value="{dx:SvgImageSource Uri=Assets/Toolbar/Find.svg}" />
                                            <dxb:UpdateAction ElementName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.Find}" PropertyName="LargeGlyph" 
                                                              Value="{dx:SvgImageSource Uri=Assets/Toolbar/Find.svg}" />
                                            <dxb:UpdateAction ElementName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.NextPage}" PropertyName="Glyph" 
                                                              Value="{dx:SvgImageSource Uri=Assets/Toolbar/NextPage.svg}" />
                                            <dxb:UpdateAction ElementName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.NextPage}" PropertyName="LargeGlyph" 
                                                              Value="{dx:SvgImageSource Uri=Assets/Toolbar/NextPage.svg}" />
                                            <dxb:UpdateAction ElementName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.PreviousPage}" PropertyName="Glyph" 
                                                              Value="{dx:SvgImageSource Uri=Assets/Toolbar/PreviousPage.svg}" />
                                            <dxb:UpdateAction ElementName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.PreviousPage}" PropertyName="LargeGlyph" 
                                                              Value="{dx:SvgImageSource Uri=Assets/Toolbar/PreviousPage.svg}" />
                                            <dxr:InsertRibbonPageGroupAction PageName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.MainRibbonPage}" Index="4">
                                                <dxr:RibbonPageGroup Caption="Rotate">
                                                    <dxb:BarButtonItem Content="Rotate Left" Command="{Binding CounterClockwiseRotateCommand, ElementName=PdfViewer}" 
                                                                       Glyph="{dx:SvgImageSource Uri=Assets/Toolbar/RotateLeft.svg}" LargeGlyph="{dx:SvgImageSource Uri=Assets/Toolbar/RotateLeft.svg}" />
                                                    <dxb:BarButtonItem Content="Rotate Right" Command="{Binding ClockwiseRotateCommand, ElementName=PdfViewer}" 
                                                                       Glyph="{dx:SvgImageSource Uri=Assets/Toolbar/RotateRight.svg}" LargeGlyph="{dx:SvgImageSource Uri=Assets/Toolbar/RotateRight.svg}" />
                                                </dxr:RibbonPageGroup>
                                            </dxr:InsertRibbonPageGroupAction>
                                            <dxr:InsertRibbonPageGroupAction PageName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.MainRibbonPage}" Index="5">
                                                <dxr:RibbonPageGroup Caption="Dictionary" IsEnabled="{Binding CurrentDocumentPath, Converter={dxmvvm:StringToBooleanConverter}}">
                                                    <dxb:BarSplitButtonItemLink BarItemName="InputLanguageItem" />
                                                    <dxb:BarButtonItemLink BarItemName="SwapLanguagesItem" />
                                                    <dxb:BarSplitButtonItemLink BarItemName="OutputLanguageItem" />
                                                </dxr:RibbonPageGroup>
                                            </dxr:InsertRibbonPageGroupAction>
                                        </dxpdf:PdfCommandProvider.RibbonActions>
                                    </dxpdf:PdfCommandProvider>
                                </dxpdf:PdfViewerControl.CommandProvider>
                            </dxpdf:PdfViewerControl>
                        </dxdo:DocumentPanel>
                    </dxdo:DocumentGroup>
                </dxdo:LayoutGroup>
                <dxdo:DockLayoutManager.AutoHideGroups>
                    <dxdo:AutoHideGroup DockType="Left">
                        <dxdo:LayoutPanel Caption="Dictionary" AutoHideExpandState="Visible" Visibility="{Binding CurrentDocumentPath, Converter={dxmvvm:StringToVisibilityConverter}}">
                            <StackPanel>
                                <DockPanel>
                                    <DockPanel.Resources>
                                        <Style x:Key="ToggleStyle" TargetType="dx:SimpleButton">
                                            <Setter Property="Width" Value="20" />
                                            <Setter Property="Height" Value="20" />
                                            <Setter Property="Margin" Value="0,0,2,0" />
                                            <Setter Property="BorderThickness" Value="0" />
                                            <Setter Property="ButtonKind" Value="Toggle" />
                                        </Style>
                                    </DockPanel.Resources>
                                    <dx:SimpleButton Style="{StaticResource ToggleStyle}" Glyph="{dx:SvgImageSource Size='20,20', Uri=Assets/Toolbar/ShowDefinitions.svg}"
                                                     ToolTip="Show Definitions" IsChecked="{Binding ShowDefinitions}" />
                                    <dx:SimpleButton Style="{StaticResource ToggleStyle}" Glyph="{dx:SvgImageSource Size='20,20', Uri=Assets/Toolbar/SortAscending.svg}"
                                                     ToolTip="Sort Ascending" IsChecked="{Binding SortDefinitionsAscending}" />
                                    <dx:SimpleButton Style="{StaticResource ToggleStyle}" Glyph="{dx:SvgImageSource Size='20,20', Uri=Assets/Toolbar/SortDescending.svg}"
                                                     ToolTip="Sort Descending" IsChecked="{Binding SortDefinitionsDescending}" />
                                    <dx:SimpleButton Style="{StaticResource ToggleStyle}" Glyph="{dx:SvgImageSource Size='20,20', Uri=Assets/Toolbar/ExportToExcel.svg}"
                                                     ToolTip="Export To Excel" ButtonKind="Simple" Command="{Binding ExportToExcelCommand}" />
                                    <dxe:SearchControl x:Name="SearchControl" FilterCondition="Contains" FilterByColumnsMode="Custom">
                                        <dxe:SearchControl.ColumnProvider>
                                            <dxe:SelectorEditColumnProvider>
                                                <dxe:SelectorEditColumnProvider.CustomColumns>
                                                    <sys:String>Word</sys:String>
                                                </dxe:SelectorEditColumnProvider.CustomColumns>
                                            </dxe:SelectorEditColumnProvider>
                                        </dxe:SearchControl.ColumnProvider>
                                    </dxe:SearchControl>
                                </DockPanel>
                                <dxe:ListBoxEdit ScrollViewer.HorizontalScrollBarVisibility="Disabled" ShowBorder="False" IsSynchronizedWithCurrentItem="True"
                                                 ItemsSource="{Binding DictionaryBookmarksView}" ItemTemplate="{StaticResource ListBoxEditItemTemplate}" FilterCriteria="{Binding FilterCriteria, ElementName=SearchControl}"
                                                 SelectedIndexChanged="{DXEvent Handler='CurrentPageNumber=@s.SelectedItem.PageNumber;@e(PdfViewer).SelectAnnotation(@s.SelectedItem.PageNumber, @s.SelectedItem.Name)'}">
                                    <dxb:BarManager.DXContextMenu>
                                        <dxb:PopupMenu>
                                            <dxb:BarCheckItemLink BarItemName="ShowDefinitionsItem" />
                                            <dxb:BarItemSeparator />
                                            <dxb:BarButtonItemLink BarItemName="SortAscendingItem" />
                                            <dxb:BarButtonItemLink BarItemName="SortDescendingItem" />
                                            <dxb:BarButtonItemLink BarItemName="ClearSortingItem" />
                                            <dxb:BarItemSeparator />
                                            <dxb:BarButtonItemLink BarItemName="ExportToExcelItem" />
                                        </dxb:PopupMenu>
                                    </dxb:BarManager.DXContextMenu>
                                </dxe:ListBoxEdit>
                            </StackPanel>
                        </dxdo:LayoutPanel>
                        <dxdo:LayoutPanel Caption="Bookmarks" Visibility="{Binding CurrentDocumentPath, Converter={dxmvvm:StringToVisibilityConverter}}">
                            <dxpdf:PdfOutlinesViewerControl Settings="{Binding ActualDocumentMapSettings, ElementName=PdfViewer}" />
                        </dxdo:LayoutPanel>
                        <dxdo:LayoutPanel Caption="Thumbnails" Visibility="{Binding CurrentDocumentPath, Converter={dxmvvm:StringToVisibilityConverter}}">
                            <dxpdf:PdfThumbnailsViewerControl Settings="{Binding ActualThumbnailsViewerSettings, ElementName=PdfViewer}"
                                                              SelectedPageNumber="{Binding CurrentPageNumber, ElementName=PdfViewer, Mode=TwoWay}" />
                        </dxdo:LayoutPanel>
                    </dxdo:AutoHideGroup>
                </dxdo:DockLayoutManager.AutoHideGroups>
            </dxdo:DockLayoutManager>
        </DockPanel>
    </dxb:BarManager>

</dxr:DXRibbonWindow>
